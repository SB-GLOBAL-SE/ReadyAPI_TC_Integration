<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="5dca8fc7-2b47-471a-ae5a-b9509066e0d9" created="2.6.0" activeEnvironment="Default environment" name="Project 1" resourceRoot="" updated="2.7.0" encryptionMode="Not encrypted" compositeProjectFormat="1.3" xmlns:con="http://eviware.com/soapui/config">
  <con:settings>
    <con:setting id="5dca8fc7-2b47-471a-ae5a-b9509066e0d9fileName">TestCompleteIntegrationProject</con:setting>
  </con:settings>
  <con:savedRecentRuns>1</con:savedRecentRuns>
  <con:requirements/>
  <con:properties>
    <con:property>
      <con:name>input_username</con:name>
      <con:value>dermot@localhost</con:value>
    </con:property>
    <con:property>
      <con:name>input_password</con:name>
      <con:value>password</con:value>
    </con:property>
    <con:property>
      <con:name>input_orderID</con:name>
      <con:value>40</con:value>
    </con:property>
    <con:property>
      <con:name>output_productName</con:name>
      <con:value>Xboox</con:value>
    </con:property>
  </con:properties>
  <con:wssContainer/>
  <con:databaseConnectionContainer/>
  <con:jmsConnectionContainer/>
  <con:oAuth2ProfileContainer/>
  <con:oAuth1ProfileContainer/>
  <con:eventHandlers type="RequestFilter.filterRequest" name="RequestFilter.filterRequest">
    <con:script>// Sample event script to add custom HTTP header to all outgoing REST, SOAP and HTTP(S) calls
// This code is often used for adding custom authentication to SoapUI Pro tests

// If hardcoding the token, uncomment and change line 5
// def token = '4567'

// If your token is parameterized in Project level custom property, uncomment line 8
// def token = request.parent.testCase.testSuite.project.getProperty('auth_token').getValue()

// To modify all outgoing calls, remove comments from lines 11 to 16
// def headers = request.requestHeaders
// if (headers.containsKey('auth_token2') == false) {
//   headers.put('auth_token2', token)
//   request.requestHeaders = headers
// }</con:script>
  </con:eventHandlers>
  <con:eventHandlers type="TestRunListener.afterStep" name="TestRunListener.afterStep">
    <con:script>// Save all test step results into files
// Change the directory path in line 5 to a location where you want to store details
// then uncomment lines 5 to 10

// filePath = 'C:\\tempOutputDirectory\\'
// fos = new FileOutputStream(filePath + testStepResult.testStep.label + '.txt', true)
// pw = new PrintWriter(fos)
// testStepResult.writeTo(pw)
// pw.close()
// fos.close()</con:script>
  </con:eventHandlers>
  <con:authRepository>
    <con:basicAuthEntry>
      <con:name>Dermot@Localhost</con:name>
      <con:type>Basic</con:type>
      <con:username>dermot@localhost</con:username>
      <con:password>password</con:password>
      <con:preemptive>false</con:preemptive>
    </con:basicAuthEntry>
  </con:authRepository>
  <con:tags/>
</con:soapui-project>
